trigger: 
  branches:
    include:
    - master

resources:
- repo: self

variables:
  tag: '$(Build.SourceVersion)'
  repository: btshft/zeus/zeus-bot
  registry: github-docker-packages

stages:
- stage: Build
  displayName: Build
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DotNetCoreCLI@2
      displayName: Run unit tests
      inputs:
        command: test
        projects: '$(Build.SourcesDirectory)/src/Zeus.sln'
    - task: Docker@2
      displayName: Login GitHub Package
      inputs:
        command: login
        containerRegistry: $(registry)
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        repository: $(repository)
        buildContext: "$(Build.SourcesDirectory)/src"
        dockerfile: '$(Build.SourcesDirectory)/src/Zeus/Dockerfile'
        tags: |
          $(tag)
    - task: CmdLine@2
      displayName: Image security scan
      inputs:
        script: |
         docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 0 --severity MEDIUM,HIGH --ignore-unfixed $(registry)/$(repository):$(tag)
         docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 1 --severity CRITICAL --ignore-unfixed $(registry)/$(repository):$(tag)
    - task: Docker@2
      displayName: Push docker image
      inputs:
        command: push
        repository: $(repository)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Logout GitHub Package
      condition: always()
      inputs:
        command: logout
        containerRegistry: github-docker-packages